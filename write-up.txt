1. Dieser Part liest den Parameter fwd aus den Requests und leitet den Nutzer an einen 
anderen Link weiter. Hier bietet sich für Angreifer die Möglichkeit URLs mit Links zu 
schädlichen Seiten an Mitarbeiter zu versenden. Dies ist besonders Riskant da der schädliche Link in dem
 vermeintlich bekannte service url besonders gut verschleiert ist.
Hier stellt sich die Frage was der Nutzen der Weiterleitung ist. Könnten über den Nutzen URLs eingeschränkt 
werden. Mein Verbesserungsvorschlag hier wäre nur bestimmte URLs als fwd Parameter zuzulassen und alle anderen
Werte zu blocken.

Außerdem wäre es sinnvoll fwd durch ein Regex zu filtern.
(!fwd.match(/^https?:\/\/([a-zA-Z0-9.-]+.com|[a-zA-Z0-9.-]+\.de)$/)
um evtl XSS Attacken zu vermeiden.
Im Browser durch die direkte Weiterleitung nicht möglich aber eventuell mit Burpsuite intercept nutzbar.
Ansätze im Intercept schauen welche Escape Charactere evtl gebraucht werden. Gibt es ähnlich wie bei dem
<img> Tag onerror Funktion oder ähnliche Workarounds um javascript direkt im href auszuführen?  
 
<script>
    var fwd = "<?php echo $_REQUEST['fwd'] ?>";
    if(fwd != ""){location.href = fwd;}
</script>

möglicher Phishing-Link: service-url.de?fwd=maliciouslink 
